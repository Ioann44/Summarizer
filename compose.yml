services:

  database:
    container_name: database
    image: postgres:16.2-alpine3.19
    environment:
      POSTGRES_PASSWORD: $DATABASE_PASSWORD
      POSTGRES_USER: user
      POSTGRES_DB: database
    restart: unless-stopped
    ports:
      - 127.0.0.1:5432:5432
    volumes:
      - ./volumes/database:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-q",
          "-d",
          "database",
          "-U",
          "user"
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    container_name: minio
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: user
      MINIO_ROOT_PASSWORD: $MINIO_PASSWORD
    restart: unless-stopped
    ports:
      - 127.0.0.1:9000:9000
      - 127.0.0.1:9001:9001
    volumes:
      - ./volumes/minio:/data
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 10s
      timeout: 5s
      retries: 5
    command: minio server /data --console-address ":9001"

  app:
    container_name: app
    build: .
    image: summarizer-app
    environment:
      TQDM_DISABLE: $TQDM_DISABLE
      INSIDE_DOCKER: 1
    restart: unless-stopped
    volumes:
      - ./server:/app/server
      - ./summarizer:/app/summarizer
      - ./.env:/app/.env
      - ./volumes/logs:/app/logs/
    ports:
      - $PORT:3000
    depends_on:
      database:
        condition: service_healthy
      minio:
        condition: service_healthy
    command: sh -c "python -u server/app.py >> ./logs/logs.txt 2>&1"
